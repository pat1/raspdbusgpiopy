#!/usr/bin/env python
# -*- coding: utf-8 -*-
# GPL. (C) 2013 Paolo Patruno.

# Authors: Paolo Patruno <p.patruno@iperbole.bologna.it> 

import os,dbusgpio.daemon as daemon
from dbusgpio import _version_
import dbusgpio.settings
import dbusgpio.interface

dbusgpiod = daemon.Daemon(
        stdin="/dev/null",
        stdout=dbusgpio.settings.logfiledbusgpio,
        stderr=dbusgpio.settings.errfiledbusgpio,
        pidfile=dbusgpio.settings.lockfiledbusgpio,
        user=dbusgpio.settings.userdbusgpio,
        group=dbusgpio.settings.groupdbusgpio
)

def main ():

    import logging,logging.handlers

    handler = logging.handlers.RotatingFileHandler(dbusgpio.settings.logfiledbusgpio, maxBytes=5000000, backupCount=10)
    formatter=logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
    handler.setFormatter(formatter)

    # Add the log message handler to the root logger
    logging.getLogger('dbusgpiod').addHandler(handler)
#    logging.getLogger('').setLevel(logging.DEBUG)
    
    logging.info('Starting up dbusgpiod version '+_version_)


#   # Use logging for ouput at different *levels*.
#   #
#   logging.getLogger().setLevel(logging.INFO)
#   log = logging.getLogger("dbusgpiod")
#   handler = logging.StreamHandler(sys.stderr)
#   log.addHandler(handler)

    dbusgpio.interface.main(pinlist=dbusgpio.settings.pinlistdbusgpio,busaddress=dbusgpio.settings.busaddressdbusgpio)

if __name__ == '__main__':

#  main()# (this code was run as script)

    import sys, os

    # this is a triky for ubuntu and debian that remove /var/run every boot
    # ATTENTION, this should be a security problem
    path=os.path.dirname(dbusgpio.settings.lockfiledbusgpio)
    if (not os.path.lexists(path) and path == "/var/run/dbusgpio" ):
        os.mkdir(path)
        if (os.getuid() == 0):
            user=dbusgpio.settings.userdbusgpio
            group=dbusgpio.settings.groupdbusgpio
            if user is not None and group is not None:
                from pwd import getpwnam
                from grp import getgrnam
                uid = getpwnam(user)[2]
                gid = getgrnam(group)[2]
                os.chown(path,uid,gid)

    if dbusgpiod.service(noptions=1000):

        sys.stdout.write("dbusgpiod version "+_version_+"\n")
        sys.stdout.write("Daemon started with pid %d\n" % os.getpid())
        sys.stdout.write("Daemon stdout output\n")
        sys.stderr.write("Daemon stderr output\n")

        sys.exit(main())  # (this code was run as script)
