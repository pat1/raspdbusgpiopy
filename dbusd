#!/usr/bin/python
# GPL. (C) 2007-2009 Paolo Patruno.

# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2 of the License, or 
# (at your option) any later version. 
# 
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
# GNU General Public License for more details. 
# 
# You should have received a copy of the GNU General Public License 
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
# 

from dbusgpio import daemon
import dbusgpio.settings

dbusd = daemon.Daemon(
        stdin="/dev/null",
        stdout=dbusgpio.settings.logfiledbus,
        stderr=dbusgpio.settings.errfiledbus,
        pidfile=dbusgpio.settings.lockfiledbus,
        user=dbusgpio.settings.userdbus,
        group=dbusgpio.settings.groupdbus
)

def main(self):

    import subprocess

    busaddress = dbusgpio.settings.busaddressdbusgpio


    if busaddress is not None:

        self.procs=[subprocess.Popen(["dbus-daemon", "--config-file="+dbusgpio.settings.conffiledbus,
            '--address='+busaddress, "--nofork"],cwd=self.cwd)]
    else:
        print "busaddress is not defined in config file: dbus-daemon not started"

if __name__ == '__main__':

    import sys, os
    dbusd.cwd=os.getcwd()

    if dbusd.service():

        sys.stdout.write("Daemon started with pid %d\n" % os.getpid())
        sys.stdout.write("Daemon stdout output\n")
        sys.stderr.write("Daemon stderr output\n")

        main(dbusd)  # (this code was run as script)

        for proc in dbusd.procs:
            proc.wait()

        sys.exit(0)


